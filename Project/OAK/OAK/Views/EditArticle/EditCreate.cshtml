@model OAK.Models.Edited.ArticleEditedModel

@await Html.PartialAsync("_jsEditCreateArticlePartial")

<form asp-controller="EditArticle" asp-action="EditCreate"
      asp-route-id="@Model.Id" method="post" enctype="multipart/form-data">

    <div id="sections-record" class="record">
        <label asp-for="Section">Ветвь: <b></b></label>
    </div>
    <select asp-for="Section" hidden>
        <option value="@Model.Section" selected>@ViewBag.SectionName</option>
    </select>
    <div class="bottom-section">
        <button id="select-section" type="button" class="standart_buttom">Выбрать</button>
    </div>
    <div id="sections" data-url="@("/EditSection/GetSections?id=&requered=" + true)"></div>

    <label class="edit_section_record" asp-for="Name">Название:</label>
    <input class="edit_profile_name edit_section_name" asp-for="Name"
           data-val="true" data-val-required="The Idsection field is required." aria-describedby="Idsection-error"
           aria-invalid="true">

    <label class="edit_section_record">Содержание:</label>
    <br>
    <span class="field_validation" asp-validation-for="Content"></span>
    <br>
    <div id="fields">
        @{
            List<(string Type, short Number, byte[] Data)> fields = Model.Content;

            foreach (var item in fields)
            {
                if (item.Type == "text")
                {
                    @await Html.PartialAsync("_ContainerTextPartial",
                        (item.Type, item.Number, item.Data))
                }

                else if (item.Type == "sub")
                {
                    @await Html.PartialAsync("_ContainerSubPartial",
                        (item.Type, item.Number, item.Data))
                }

                else if (item.Type == "img")
                {
                    @await Html.PartialAsync("_ContainerImgPartial",
                        (item.Type, item.Number, item.Data))
                }
            }

            <script>
                var b = makeButtoms(@((fields.Count == 0) ? 0 : fields.Max(e => e.Number)));
                document.getElementById("fields").appendChild(b);
            </script>
        }
    </div>

    <button class="standart_buttom edit_profile_botton">Сохранить</button>
</form>

<div class="out edit_profile_drop">
    <a id="drop" class="a_botton" asp-controller="EditArticle" asp-action="Drop" asp-route-id="@Model.Id">
        Сбросить
    </a>
</div>

@section Scripts{
    <script>
        var src = @Html.Raw((int)ViewBag.Source);

        $(document).ready(function () {
            if (src == -1) {
                $("form").attr("action", $("form").attr("action") + "?source=" + (history.length - 1));
                $("#drop").attr("href", $("#drop").attr("href") + "?source=" + (history.length - 1));
            } else {
                $("form").attr("action", $("form").attr("action") + "?source=" + @Html.Raw((int)ViewBag.Source));
                $("#drop").attr("href", $("#drop").attr("href") + "?source=" + @Html.Raw((int)ViewBag.Source));
            }

            $("#sections-record > label > b")
                .html($("select option:selected").text());

            $("#select-section").click(function () {
                $.get($("#sections").data("url")).done(function (data) {
                    $("#sections").html(data);
                });
            });

            $("#sections").on("click", ".modal-item[data-value]", function () {
                $("#sections-record > label > b").html($(this).text());

                $("select").html("<option value=\"" + $(this).data("value") + "\"></option>");

                $("#sections").html("");
            });
        });
    </script>
}