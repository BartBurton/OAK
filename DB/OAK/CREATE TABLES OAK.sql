USE OAK
GO

--AUTORS--
CREATE TABLE AUTORS
(
	ID BIGINT PRIMARY KEY IDENTITY(1, 1),
	NAME NVARCHAR(16) NOT NULL,
	EMAIL NVARCHAR(128) NOT NULL UNIQUE,
	PASSWORD NVARCHAR(64) NOT NULL UNIQUE,
	STATUS NVARCHAR(512) DEFAULT 'No status',

	[IDAVATAR] [uniqueidentifier] ROWGUIDCOL NOT NULL UNIQUE, 
	AVATAR VARBINARY(MAX) FILESTREAM NOT NULL,

	CONSTRAINT CK_AUTOR_NAME CHECK(NAME != ''),
	CONSTRAINT CK_AUTOR_EMAIL CHECK(EMAIL != ''),
	CONSTRAINT CK_AUTOR_PASSWORD CHECK(PASSWORD != '')
);
GO

--SECTIONS--
CREATE TABLE SECTIONS
(
	ID BIGINT PRIMARY KEY IDENTITY(1, 1),
	NAME NVARCHAR(32) NOT NULL,
	IDPARENT BIGINT,
	IDAUTOR BIGINT,


	CONSTRAINT CK_SECTIONS_NAME CHECK(NAME != ''),

	CONSTRAINT FK_SECTIONS_TO_AUTOR 
		FOREIGN KEY(IDAUTOR) REFERENCES AUTORS(ID) ON DELETE SET NULL,

	CONSTRAINT FK_SECTIONS_TO_SECTION
		FOREIGN KEY(IDPARENT) REFERENCES SECTIONS(ID) ON DELETE NO ACTION,
);
GO

--ARTICLES--
CREATE TABLE ARTICLES
(
	ID BIGINT PRIMARY KEY IDENTITY(1, 1),
	NAME NVARCHAR(32) NOT NULL,
	IDAUTOR BIGINT,
	IDSECTION BIGINT NOT NULL,
	DATE DATETIME NOT NULL,


	CONSTRAINT CK_ARTICLES_NAME CHECK(NAME != ''),

	CONSTRAINT FK_ARTICLES_TO_AUTOR 
		FOREIGN KEY(IDAUTOR) REFERENCES AUTORS(ID) ON DELETE SET NULL,

	CONSTRAINT FK_ARTICLES_TO_SECTIONS
		FOREIGN KEY(IDSECTION) REFERENCES SECTIONS(ID) ON DELETE CASCADE
);
GO

--COMMENTS--
CREATE TABLE COMMENTS
(
	ID BIGINT PRIMARY KEY IDENTITY(1, 1),
	TEXT NVARCHAR(2048) NOT NULL,
	IDAUTOR BIGINT NOT NULL, 
	IDARTICLE BIGINT NOT NULL,
	IDPARENT BIGINT,
	DATE DATETIME NOT NULL,


	CONSTRAINT CK_COMMENTS_TEXT CHECK(TEXT != ''),

	CONSTRAINT FK_COMMENTS_TO_AUTOR 
		FOREIGN KEY(IDAUTOR) REFERENCES AUTORS(ID) ON DELETE CASCADE,

	CONSTRAINT FK_COMMENTS_TO_ARTICLE 
		FOREIGN KEY(IDARTICLE) REFERENCES ARTICLES(ID) ON DELETE CASCADE,

	CONSTRAINT FK_COMMENTS_TO_COMMENT
		FOREIGN KEY(IDPARENT) REFERENCES COMMENTS(ID) ON DELETE NO ACTION,
);
GO

--TEXTS OF ARTICLE--
CREATE TABLE ART_TEXTS
(
	IDARTICLE BIGINT,
	NUMBER SMALLINT,

	[IDTEXT] [uniqueidentifier] ROWGUIDCOL NOT NULL UNIQUE, 
	TEXT VARBINARY(MAX) FILESTREAM NOT NULL,
	

	PRIMARY KEY(IDARTICLE, NUMBER),

	CONSTRAINT FK_ART_TEXT_TO_ARTICLE
		FOREIGN KEY(IDARTICLE) REFERENCES ARTICLES(ID) ON DELETE CASCADE
);
GO	

--SUBTITLES OF ARTICLE--
CREATE TABLE ART_SUBTITLES
(
	IDARTICLE BIGINT,
	NUMBER SMALLINT,

	[IDSUBTITLE] [uniqueidentifier] ROWGUIDCOL NOT NULL UNIQUE, 
	SUBTITLE VARBINARY(MAX) FILESTREAM NOT NULL,


	PRIMARY KEY(IDARTICLE, NUMBER),

	CONSTRAINT FK_ART_SUBTITLES_TO_ARTICLE
		FOREIGN KEY(IDARTICLE) REFERENCES ARTICLES(ID) ON DELETE CASCADE
);
GO

--IMAGES OF ARTICLE--
CREATE TABLE ART_IMAGES
(
	IDARTICLE BIGINT,
	NUMBER SMALLINT,

	[IDIMAGE] [uniqueidentifier] ROWGUIDCOL NOT NULL UNIQUE, 
	IMAGE VARBINARY(MAX) FILESTREAM NOT NULL,
	

	PRIMARY KEY(IDARTICLE, NUMBER),

	CONSTRAINT FK_ART_IMAGES_TO_ARTICLE
		FOREIGN KEY(IDARTICLE) REFERENCES ARTICLES(ID) ON DELETE CASCADE
);
GO

--FAVORITE AUTORS--
CREATE TABLE FAV_AUTORS
(
	IDAUTORORIGIN BIGINT,
	IDAUTORFAVORITE BIGINT,


	PRIMARY KEY(IDAUTORORIGIN, IDAUTORFAVORITE),

	CONSTRAINT FK_FAV_AUTORS_TO_AUTORS
		FOREIGN KEY(IDAUTORORIGIN) REFERENCES AUTORS(ID) ON DELETE CASCADE,
		FOREIGN KEY(IDAUTORFAVORITE) REFERENCES AUTORS(ID) ON DELETE NO ACTION
);
GO

--FAVORITE ARTICLES--
CREATE TABLE FAV_ARTICLES
(
	IDAUTOR BIGINT,
	IDARTICLE BIGINT,


	PRIMARY KEY(IDAUTOR, IDARTICLE),

	CONSTRAINT FK_FAV_ARTICLES_TO_AUTORS
		FOREIGN KEY(IDAUTOR) REFERENCES AUTORS(ID) ON DELETE CASCADE,
		FOREIGN KEY(IDARTICLE) REFERENCES ARTICLES(ID) ON DELETE CASCADE
);
GO

--FAVORITE SECTIONS--
CREATE TABLE FAV_SECTIONS
(
	IDAUTOR BIGINT,
	IDSECTION BIGINT,


	PRIMARY KEY(IDAUTOR, IDSECTION),

	CONSTRAINT FK_FAV_SECTIONS_TO_AUTORS
		FOREIGN KEY(IDAUTOR) REFERENCES AUTORS(ID) ON DELETE CASCADE,
		FOREIGN KEY(IDSECTION) REFERENCES SECTIONS(ID) ON DELETE CASCADE
);
GO